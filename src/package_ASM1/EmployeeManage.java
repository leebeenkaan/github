package package_ASM1;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

public final class EmployeeManage extends javax.swing.JFrame {

	ArrayList<Employee> list = new ArrayList<>();
	DefaultTableModel model = new DefaultTableModel();
	int index = 0;
	boolean isEditMode = false;
	String path = "dataEmployee.dat";
	/**
	 * Creates new form EmployeeManageForm
	 */
	public EmployeeManage() {
		initComponents();

		setLocationRelativeTo(null);

		initTable();
		initData();
	}

	public void initTable() {
		model.setColumnIdentifiers(new Object[] { "MÃ NHÂN VIÊN", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG" });
		tblList.setModel(model);
	}

	public void initData() {
		list.add(new Employee("NV01", "Nguyễn Văn Trường An", "annvtps29128@fpt.edu.vn", 8000000, 22));
		list.add(new Employee("NV02", "Nguyễn Thị Anh", "anhps29127@fpt.edu.vn", 9500000, 23));
		list.add(new Employee("NV03", "Trần Ang", "angps29126@fpt.edu.vn", 7000000, 27));
		list.add(new Employee("NV04", "Nguyễn Thanh", "thanhps29125@fpt.edu.vn", 5500000, 20));
		list.add(new Employee("Nv05", "Trần Vân", "vanps29124@fpt.edu.vn", 6000000, 21));
		fillToTable(model);
	}
	private void showDetail(int index) {
        txtId.setText(list.get(index).getId());
        txtName.setText(list.get(index).getName());
        txtAge.setText(list.get(index).getAge() + "");
        txtEmail.setText(list.get(index).getEmail());
        txtSalary.setText(list.get(index).getSalary() + "");

//        txtRecord.setText("Records: " + (index + 1) + " of " + list.size());
//        tblList.setRowSelectionInterval(index, index);
    }

	public void fillToTable(DefaultTableModel model) {
		model.setRowCount(0);

		for (Employee emp : list) {
			Object[] row = new Object[] { emp.getId(), emp.getName(), emp.getAge(), emp.getEmail(), emp.getSalary() };
			model.addRow(row);
		}
		model.fireTableDataChanged();
	}
	private void showDetail(Employee emp) {
        txtId.setText(emp.getId());
        txtName.setText(emp.getName());
        txtAge.setText("" + emp.getAge());
        txtEmail.setText(emp.getEmail());
        txtSalary.setText("" + emp.getSalary());
    }
	  private void initClock() {
	        ClockThread tm = new ClockThread(lblClock);
	        tm.start();
	    }
    Employee readForm() {
        Employee emp = new Employee();
        emp.setId(txtId.getText());
        emp.setName(txtName.getText());
        emp.setAge(Integer.parseInt(txtAge.getText()));
        emp.setEmail(txtEmail.getText());
        emp.setSalary(Float.parseFloat(txtSalary.getText()));
        return emp;
    }

	private void writeTable(Employee emp) {
		txtId.setText(emp.getId());
		txtName.setText(emp.getName());
		txtAge.setText("" + emp.getAge());
		txtEmail.setText(emp.getEmail());
		txtSalary.setText("" + emp.getSalary());
	}
	public boolean updateById(Employee emp) {
        Employee exEmp = findId(emp.getId());
        boolean flag = false;
        if (exEmp != null) {
            exEmp.setName(emp.getName());
            exEmp.setAge(emp.getAge());
            exEmp.setEmail(emp.getEmail());
            exEmp.setSalary(emp.getSalary());
            flag = true;
        }
        return flag;
    }

    public boolean deleteById(String Id) {
        for (Employee employee : list) {
            if (employee.getId().equals(Id)) {
                list.remove(employee);
                return true;
            }
        }
        return false;
    }
	public Employee findId(String Id) {
		for (Employee emp : list) {
			if (emp.getId().equals(Id)) {
				return emp;
			}
		}
		return null;
	}

	public String getInfo() {
		return "Record: " + (index + 1) + " of " + list.size();
	}

	public void setEmployee(Employee emp) {
		index = list.indexOf(emp);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		txtId = new javax.swing.JTextField();
		txtName = new javax.swing.JTextField();
		txtAge = new javax.swing.JTextField();
		txtEmail = new javax.swing.JTextField();
		txtSalary = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblList = new javax.swing.JTable();
		jPanel2 = new javax.swing.JPanel();
		btnNew = new javax.swing.JButton();
		btnSave = new javax.swing.JButton();
		btnDelete = new javax.swing.JButton();
		btnFind = new javax.swing.JButton();
		btnOpen = new javax.swing.JButton();
		btnExit = new javax.swing.JButton();
		btnFirst = new javax.swing.JButton();
		btnPrevious = new javax.swing.JButton();
		btnNext = new javax.swing.JButton();
		btnLast = new javax.swing.JButton();
		lblStatus = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("QUẢN LÝ NHÂN VIÊN");
		setBackground(new java.awt.Color(255, 204, 255));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
		jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel2.setText("MÃ NHÂN VIÊN");

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel3.setText("HỌ VÀ TÊN");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel4.setText("TUỔI");

		jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel5.setText("EMAIL");

		jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel6.setText("LƯƠNG");

		tblList.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG" }));
		tblList.setRowHeight(20);
		tblList.setRowMargin(5);
		tblList.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblListMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tblList);

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

		btnNew.setBackground(new java.awt.Color(102, 204, 255));
		btnNew.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		btnNew.setText("New");
		btnNew.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNewActionPerformed(evt);
			}
		});

		btnSave.setBackground(new java.awt.Color(102, 204, 255));
		btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		btnSave.setText("Save");
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});

		btnDelete.setBackground(new java.awt.Color(102, 204, 255));
		btnDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		btnDelete.setText("Delete");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		btnFind.setBackground(new java.awt.Color(102, 204, 255));
		btnFind.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		btnFind.setText("Find");
		btnFind.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFindActionPerformed(evt);
			}
		});

		btnOpen.setBackground(new java.awt.Color(102, 204, 255));
		btnOpen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		btnOpen.setText("Open");
		btnOpen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOpenActionPerformed(evt);
			}
		});

		btnExit.setBackground(new java.awt.Color(255, 51, 51));
		btnExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnExit.setForeground(new java.awt.Color(255, 255, 255));
		btnExit.setText("Exit");
		btnExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExitActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnFind, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnOpen, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))
						.addContainerGap()));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
//event
		btnFirst.setText("|<");
		btnFirst.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFirstActionPerformed(evt);
			}
		});

		btnPrevious.setText("<<");
		btnPrevious.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnPreviousActionPerformed(evt);
			}
		});

		btnNext.setText(">>");
		btnNext.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNextActionPerformed(evt);
			}
		});

		btnLast.setText(">|");
		btnLast.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLastActionPerformed(evt);
			}
		});

		lblStatus.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
		lblStatus.setForeground(new java.awt.Color(204, 51, 0));
		lblStatus.setText("Record: 1 of 5");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
							.addGap(5)
							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addComponent(jLabel3)
								.addComponent(jLabel4)
								.addComponent(jLabel5)
								.addComponent(jLabel6)
								.addComponent(jLabel2))
							.addGap(18)
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
									.addGroup(layout.createParallelGroup(Alignment.LEADING)
										.addGroup(layout.createSequentialGroup()
											.addComponent(btnFirst)
											.addGap(6)
											.addComponent(btnPrevious)
											.addPreferredGap(ComponentPlacement.RELATED)
											.addComponent(btnNext)
											.addPreferredGap(ComponentPlacement.RELATED)
											.addComponent(btnLast)
											.addPreferredGap(ComponentPlacement.UNRELATED)
											.addComponent(lblStatus)
											.addPreferredGap(ComponentPlacement.RELATED, 110, Short.MAX_VALUE))
										.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
											.addComponent(txtName, GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
											.addComponent(txtEmail)
											.addComponent(txtId, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
											.addComponent(txtAge, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
											.addComponent(txtSalary, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)))
									.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createSequentialGroup()
									.addGroup(layout.createParallelGroup(Alignment.LEADING)
										.addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 321, GroupLayout.PREFERRED_SIZE)
										.addGroup(layout.createSequentialGroup()
											.addGap(53)
											.addComponent(jLabel1)))
									.addGap(5, 180, Short.MAX_VALUE)))))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addComponent(jLabel1)
					.addGap(10)
					.addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addGap(2)
							.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED, 17, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup()
							.addGap(16)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(txtId, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(txtName, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel4)
								.addComponent(txtAge, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
							.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel6)
								.addComponent(txtSalary, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE))
							.addGap(43)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnFirst, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnPrevious, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnNext, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(btnLast, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblStatus))
							.addGap(47)))
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
					.addContainerGap())
		);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNewActionPerformed
		btnNew();

	}// GEN-LAST:event_btnNewActionPerformed

	private void btnNew() {
		txtId.setText("");
		txtName.setText("");
		txtAge.setText("");
		txtEmail.setText("");
		txtSalary.setText("");
	}
	

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
		btnSave();

	}
	private void btnSave() {
		 try {
	            StringBuilder sb = new StringBuilder();
	            Validation.checkEmpty(txtId, sb, "Mã nhân viên không được để trống!");
	            Validation.checkEmpty(txtName, sb, "Tên nhân viên không được để trống!");
	            Validation.checkAge(txtAge, sb);
	            Validation.checkSalary(txtSalary, sb);
	            Validation.checkEmail(txtEmail, sb);
	            if (sb.length() > 0) {
	                JOptionPane.showMessageDialog(this, sb.toString(), "Thông báo", JOptionPane.ERROR_MESSAGE);
	                return;
	            }
	            Employee emp = readForm();

	            if (isEditMode) {
	                if (this.findId(emp.getId()) == null) {
	                    JOptionPane.showMessageDialog(this, "Nhân viên này không tồn tại!");
	                    return;
	                }
	                this.updateById(emp);
	            } else {
	                if (this.findId(emp.getId()) != null) {
	                    JOptionPane.showMessageDialog(this, "Nhân viên này đã tồn tại!");
	                    return;
	                }
	                list.add(emp);
	            }
	            fillToTable(model);
	            JOptionPane.showMessageDialog(this, "Đã lưu thông tin nhân viên!");
	        } catch (Exception e) {
	            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
	        }
	    }
		
	

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		btnDelete();
	}

	private void btnDelete() {
		int selectedRow = tblList.getSelectedRow();
	    if (selectedRow == -1) {
	        JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên cần xoá!");
	    } else {
	        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá nhân viên này?");
	        if (confirm == JOptionPane.YES_OPTION) {
	            list.remove(selectedRow);
	            fillToTable(model);
	            
	            JOptionPane.showMessageDialog(this, "Xoá nhân viên thành công!");
	        }
	    }
	}

	private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFindActionPerformed
		btnfindId();
	}

	private void btnfindId() {
		String keyword = JOptionPane.showInputDialog(this, "Nhập mã nhân viên cần tìm:");
	    if (keyword != null) {
	        Employee emp = findId(keyword);
	        if (emp != null) {
	            int index = list.indexOf(emp);
	            tblList.setRowSelectionInterval(index, index);
	            showDetail(emp);
	        } else {
	            JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên có mã " + keyword);
	        }
	    }
		
	}

	private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        try {
            openFile();
            fillToTable(model);
            if (list.size() > 0) {
                index = 0;
                tblList.setRowSelectionInterval(index, index);
                Employee emp = getEmployee();
                showDetail(emp);
            } else {
                txtId.requestFocus();
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }
	private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        try {
            saveFile();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
        System.exit(0);
    }

//	private void btnOpen() {
//		
//		
//	}



	private void tblListMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblListMouseClicked
		int row = tblList.getSelectedRow();
		if (row >= 0) {
			String empId = (String) tblList.getValueAt(row, 0);
			Employee emp = findId(empId);
			if (emp != null) {
				writeTable(emp);
				setEmployee(emp);
				lblStatus.setText(getInfo());
			}
		}
	}// GEN-LAST:event_tblListMouseClicked

	private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFirstActionPerformed
		btnFirst();
	}

	private void btnFirst() {
		
		
	}

	private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPreviousActionPerformed
		btnPrevious();
	}

	private void btnPrevious() {
		
		
	}

	private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNextActionPerformed
		btnNext();
	}

	private void btnNext() {
		
		
	}

	private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLastActionPerformed
		btnLast();
	}

	private void btnLast() {
		
		
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EmployeeManage.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EmployeeManage.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EmployeeManage.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EmployeeManage.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new EmployeeManage().setVisible(true);
			}
		});
	}

//Name begin
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnExit;
	private javax.swing.JButton btnFind;
	private javax.swing.JButton btnFirst;
	private javax.swing.JButton btnLast;
	private javax.swing.JButton btnNew;
	private javax.swing.JButton btnNext;
	private javax.swing.JButton btnOpen;
	private javax.swing.JButton btnPrevious;
	private javax.swing.JButton btnSave;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JLabel lblStatus;
	private javax.swing.JTable tblList;
	private javax.swing.JTextField txtAge;
	private javax.swing.JTextField txtEmail;
	private javax.swing.JTextField txtId;
	private javax.swing.JTextField txtName;
	private javax.swing.JTextField txtSalary;
	private javax.swing.JLabel lblClock;

//end

//Phương thức
	public void setEmployee1 (Employee emp) {
        index = list.indexOf(emp);
    }

    public Employee getEmployee() {
        if (list.size() == 0) {
            return null;
        }
        return list.get(index);
    }

    public String getInfo1() {
        return "Record: " + (index + 1) + " of " + list.size();
    }

    public void first() {
        if (index > 0) {
            index = 0;
        }
    }

    public void previous() {
        if (index > 0) {
            index--;
        }
    }

    public void next() {
        if (index < list.size() - 1) {
            index++;
        }
    }

    public void last() {
        index = list.size() - 1;
    }

    public void saveFile() throws Exception {
        XFile.writeOject(path, list);
        System.out.println(list.size());
    }

    public void openFile() throws Exception {
        Object obj = XFile.readObject(path);
        if (obj != null) {
            list = (ArrayList<Employee>) obj;
        }
    }
    
    public int find() {
        String manv = JOptionPane.showInputDialog("Nhập Mã NV cần tìm: ");
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getName().equalsIgnoreCase(manv)) {
                return i;
            }
        }
        return 0;
    }
}
