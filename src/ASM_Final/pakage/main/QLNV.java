package ASM_Final.pakage.main;
import ASM_Final.pakage.login.LoginForm;
import ASM_Final.pakage.model.Employee;
import ASM_Final.pakage.model.ClockThread;
import java.awt.HeadlessException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import java.awt.Toolkit;



/**
 * @author TruongAn
 *
 */
public final class QLNV extends javax.swing.JFrame {

	ArrayList<Employee> list = new ArrayList<>();
	DefaultTableModel model = new DefaultTableModel();
	StringBuilder sb = new StringBuilder();
	int index = 0;
	String fileHinh;

	/**
	 * Creates new form EmployeeManage
	 */
	public QLNV() {
		initComponents();
		setLocationRelativeTo(null);
		model = (DefaultTableModel) tblList.getModel();
		initData();
		filltoTable();
		showDetail(index);
		initClock();

		// Gắn logo cho form
		setIconImage(Toolkit.getDefaultToolkit().getImage(
				"C:\\Users\\TruongAn\\eclipse-workspace\\laptrinh_java_2\\src\\ASM_Final\\pakage\\main\\andeptrai.jpg"));
		// Giao diện tiêu đề cho bảng nhân viên
		JTableHeader title = tblList.getTableHeader();
		title.setBackground(java.awt.Color.RED);
		title.setForeground(java.awt.Color.WHITE);
		title.setFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 14));
		title.setBounds(5, 5, 50, 50);

		// Hiện màu nền cho jframe
		// this.getContentPane().setBackground(Color.CYAN);
		this.getContentPane().setBackground(new java.awt.Color(231, 228, 190));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		txtMaNV = new javax.swing.JTextField();
		txtHoTen = new javax.swing.JTextField();
		txtTuoi = new javax.swing.JTextField();
		txtEmail = new javax.swing.JTextField();
		txtLuong = new javax.swing.JTextField();
		jPanel1 = new javax.swing.JPanel();
		btnFirst = new javax.swing.JButton();
		btnPrev = new javax.swing.JButton();
		btnNext = new javax.swing.JButton();
		btnLast = new javax.swing.JButton();
		txtRecord = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		btnNew = new javax.swing.JButton();
		btnSave = new javax.swing.JButton();
		btnDelete = new javax.swing.JButton();
		btnFind = new javax.swing.JButton();
		btnOpen = new javax.swing.JButton();
		btnExit = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblList = new javax.swing.JTable();
		jSeparator1 = new javax.swing.JSeparator();
		lblClock = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("HỆ THỐNG QUẢN LÝ | Design by TruongAnDev");

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(204, 102, 0));
		jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

		jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel2.setText("MÃ NHÂN VIÊN");

		jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel3.setText("HỌ VÀ TÊN");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel4.setText("TUỔI");

		jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel5.setText("EMAIL");

		jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel6.setText("LƯƠNG");

		txtMaNV.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		txtTuoi.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		txtEmail.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		txtLuong.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		btnFirst.setBackground(new java.awt.Color(255, 204, 204));
		btnFirst.setFont(btnFirst.getFont().deriveFont(btnFirst.getFont().getSize() + 6f));
		btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/first.png"))); // NOI18N
		btnFirst.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnFirst.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFirstActionPerformed(evt);
			}
		});

		btnPrev.setBackground(new java.awt.Color(255, 255, 204));
		btnPrev.setFont(btnPrev.getFont().deriveFont(btnPrev.getFont().getSize() + 6f));
		btnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/prev.png"))); // NOI18N
		btnPrev.setToolTipText("");
		btnPrev.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnPrev.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnPrevActionPerformed(evt);
			}
		});

		btnNext.setBackground(new java.awt.Color(255, 255, 204));
		btnNext.setFont(btnNext.getFont().deriveFont(btnNext.getFont().getSize() + 6f));
		btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/next.png"))); // NOI18N
		btnNext.setToolTipText("");
		btnNext.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnNext.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNextActionPerformed(evt);
			}
		});

		btnLast.setBackground(new java.awt.Color(255, 204, 204));
		btnLast.setFont(btnLast.getFont().deriveFont(btnLast.getFont().getSize() + 6f));
		btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/last.png"))); // NOI18N
		btnLast.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnLast.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLastActionPerformed(evt);
			}
		});

		txtRecord.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(txtRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(txtRecord, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap()));

		jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		btnNew.setBackground(new java.awt.Color(102, 204, 255));
		btnNew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/new.png"))); // NOI18N
		btnNew.setText("New");
		btnNew.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnNew.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNewActionPerformed(evt);
			}
		});

		btnSave.setBackground(new java.awt.Color(102, 204, 255));
		btnSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save.png"))); // NOI18N
		btnSave.setText("Save");
		btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSaveActionPerformed(evt);
			}
		});

		btnDelete.setBackground(new java.awt.Color(102, 204, 255));
		btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
		btnDelete.setText("Delete");
		btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		btnFind.setBackground(new java.awt.Color(102, 204, 255));
		btnFind.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/find.png"))); // NOI18N
		btnFind.setText("Find");
		btnFind.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnFind.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFindActionPerformed(evt);
			}
		});

		btnOpen.setBackground(new java.awt.Color(102, 204, 255));
		btnOpen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/open.png"))); // NOI18N
		btnOpen.setText("Open");
		btnOpen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnOpen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOpenActionPerformed(evt);
			}
		});

		btnExit.setBackground(new java.awt.Color(153, 153, 0));
		btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		btnExit.setForeground(new java.awt.Color(255, 255, 255));
		btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit.png"))); // NOI18N
		btnExit.setText("Exit");
		btnExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
		btnExit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExitActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
								.addComponent(btnFind, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		tblList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		tblList.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tblList.setRowHeight(20);
		tblList.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblListMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tblList);

		lblClock.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
		lblClock.setText("time");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
										.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50,
												Short.MAX_VALUE)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2)
												.addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
										.addGap(27, 27, 27)
										.addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(txtHoTen)
												.addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 280,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(47, 47, 47))
										.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
												.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(35, 35, 35)))
								.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(50, 50, 50)))
						.addContainerGap())
				.addGroup(layout.createSequentialGroup().addGap(122, 122, 122)
						.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 425,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addComponent(jLabel1).addGap(204, 204, 204))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addComponent(lblClock).addGap(65, 65, 65)))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(7, 7, 7).addComponent(lblClock).addGap(8, 8, 8)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(7, 7, 7)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(26, 26, 26)
										.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(8, 8, 8)))
						.addGap(18, 18, Short.MAX_VALUE).addComponent(jScrollPane1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNewActionPerformed
		// TODO add your handling code here:
		this.getNew();
	}// GEN-LAST:event_btnNewActionPerformed

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSaveActionPerformed
		// TODO add your handling code here:
		this.getSave();
	}// GEN-LAST:event_btnSaveActionPerformed

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		// TODO add your handling code here:
		this.getDelete();
	}// GEN-LAST:event_btnDeleteActionPerformed

	private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFindActionPerformed
		// TODO add your handling code here:
		this.getFind();
	}// GEN-LAST:event_btnFindActionPerformed

	private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnOpenActionPerformed
		// TODO add your handling code here:
		this.getOpen();
	}// GEN-LAST:event_btnOpenActionPerformed

	private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnExitActionPerformed
		// TODO add your handling code here:
		this.getExit();
		System.exit(0);
	}// GEN-LAST:event_btnExitActionPerformed

	private void tblListMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblListMouseClicked
		// TODO add your handling code here:
		this.getListTable();
	}// GEN-LAST:event_tblListMouseClicked

	private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFirstActionPerformed
		// TODO add your handling code here:
		this.getFirst();
	}// GEN-LAST:event_btnFirstActionPerformed

	private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPrevActionPerformed
		// TODO add your handling code here:
		this.getPrev();
	}// GEN-LAST:event_btnPrevActionPerformed

	private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNextActionPerformed
		// TODO add your handling code here:
		this.getNext();
	}// GEN-LAST:event_btnNextActionPerformed

	private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLastActionPerformed
		// TODO add your handling code here:
		this.getLast();
	}// GEN-LAST:event_btnLastActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows Classic".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(QLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				javax.swing.UIManager.put("OptionPane.messageForeground", java.awt.Color.RED);
				javax.swing.UIManager.put("Panel.background", java.awt.Color.OPAQUE);
				boolean ok = true;
				int msg = JOptionPane.showConfirmDialog(null,
						"Bạn cần phải đăng nhập để truy cập trang quản lý!!!" + "\n(Chọn 'YES' để tiếp tục)",
						"THÔNG BÁO", JOptionPane.YES_NO_OPTION);
				if (msg == JOptionPane.YES_OPTION) {
					if (ok) {
						new LoginForm().setVisible(true);
					} else {
						new QLNV().setVisible(true);
					}
				} else {
					return;
				}
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnExit;
	private javax.swing.JButton btnFind;
	private javax.swing.JButton btnFirst;
	private javax.swing.JButton btnLast;
	private javax.swing.JButton btnNew;
	private javax.swing.JButton btnNext;
	private javax.swing.JButton btnOpen;
	private javax.swing.JButton btnPrev;
	private javax.swing.JButton btnSave;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JLabel lblClock;
	private javax.swing.JTable tblList;
	private javax.swing.JTextField txtEmail;
	private javax.swing.JTextField txtHoTen;
	private javax.swing.JTextField txtLuong;
	private javax.swing.JTextField txtMaNV;
	private javax.swing.JLabel txtRecord;
	private javax.swing.JTextField txtTuoi;
	// End of variables declaration//GEN-END:variables

	/**
	 * Chức năng hiển thị đồng hồ.
	 */
	private void initClock() {
		ClockThread tm = new ClockThread(lblClock);
		tm.start();
	}

	/**
	 * Phương thức nhập sẵn dữ liệu nhân viên.
	 */
	private void initData() {
		list.add(new Employee("A01", "Nguyễn Hoàng Duy", "duy@fpt.edu.vn", 22, 8000000));
		list.add(new Employee("A02", "Trần Quốc Bảo", "bao@fpt.edu.vn", 27, 7000000));
		list.add(new Employee("A03", "Đỗ Tiến Đạt", "dat@fpt.edu.vn", 18, 6000000));
		list.add(new Employee("A04", "Nguyễn Thị Thu", "thu@fpt.edu.vn", 23, 9500000));
		list.add(new Employee("A05", "Nguyễn Thanh Thuỳ", "thuy@fpt.edu.vn", 20, 5500000));
		list.add(new Employee("A06", "Trần Quý Anh", "anh@fpt.edu.vn", 21, 9000000));
	}

	/**
	 * Phương thức xuất dữ liệu nhân viên.
	 *
	 * @param index
	 */
	private void showDetail(int index) {
		Employee emp = list.get(index);
		txtMaNV.setText(emp.getMaNV());
		txtHoTen.setText(emp.getHoTen());
		txtTuoi.setText("" + emp.getTuoi());
		txtEmail.setText(emp.getEmail());
		txtLuong.setText("" + emp.getLuong());

//        fileHinh = emp.getFileHinh();
//        ImageIcon img = new ImageIcon(fileHinh);
//        //Image si = img.getScaledInstance(jPanelHinh.getWidth(), jPanelHinh.getHeight(), Image.SCALE_SMOOTH);
//        lblImage.setIcon(img);
//        if (fileHinh != "") {
//            lblImage.setText("");
//        } else {
//            lblImage.setText("Hinh");
//        }
		txtRecord.setText("Records: " + (index + 1) + " of " + list.size());
		tblList.setRowSelectionInterval(index, index);
	}

	/**
	 * Phương thức đổ dữ liệu từ Employee vào JTable.
	 */
	private void filltoTable() {
		model.setRowCount(0);
		for (Employee emp : list) {
			model.addRow(new Object[] { emp.getMaNV(), emp.getHoTen(), emp.getTuoi(), emp.getEmail(), emp.getLuong() });
		}
	}

	/**
	 * Phương thức lấy danh sách nhân viên.
	 */
	private void getListTable() {
		int row = tblList.getSelectedRow();
		if (row >= 0) {
			index = row;
			showDetail(index);
		}
	}

	/**
	 * Phương thức lấy dữ liệu thông tin nhân viên.
	 */
	Employee readForm() {
		Employee emp = new Employee();
		emp.setMaNV(txtMaNV.getText());
		emp.setHoTen(txtHoTen.getText());
		emp.setTuoi(Integer.parseInt(txtTuoi.getText()));
		emp.setEmail(txtEmail.getText());
		emp.setLuong(Double.parseDouble(txtLuong.getText()));
		return emp;
	}

	/**
	 * Phương thức tìm nhân viên theo mã nhân viên.
	 *
	 * @param Id
	 * @return
	 */
	private Employee find(String Id) {
		for (Employee emp : list) {
			if (emp.getMaNV().equals(Id)) {
				return emp;
			}
		}
		return null;
	}

	/**
	 * Phương thức cập nhật danh sách nhân viên.
	 *
	 * @param emp
	 * @return
	 */
	private boolean update(Employee emp) {
		Employee x = find(emp.getMaNV());
		boolean flag = false;
		if (x != null) {
			x.setHoTen(emp.getHoTen());
			x.setTuoi(emp.getTuoi());
			x.setEmail(emp.getEmail());
			x.setLuong(emp.getLuong());
			flag = true;
		}
		return flag;
	}

	/**
	 * Chức năng làm mới form nhập liệu.
	 */
	private void getNew() {
		txtMaNV.setText("");
		txtHoTen.setText("");
		txtTuoi.setText("");
		txtEmail.setText("");
		txtLuong.setText("");
		txtRecord.setText("Records: 1 of ...");
		index = -1;
	}

	/**
	 * Chức năng lưu và cập nhật thông tin nhân viên.
	 */
	private void getSave() {
		try {
			if (getValidate()) {
				Employee emp = readForm();
				if (this.find(emp.getMaNV()) == null) {
					list.add(emp);
					index = list.size() - 1;
					JOptionPane.showMessageDialog(this, "Đã thêm nhân viên thành công!");
				} else {
					this.update(emp);
					JOptionPane.showMessageDialog(this, "Đã lưu thông tin nhân viên!");
				}
				filltoTable();
				showDetail(index);
			}
		} catch (Exception e) {
		}
	}

	/**
	 * Chức năng xoá nhân viên khỏi JTable.
	 */
	private void getDelete() {
		try {
			if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa nhân viên này không?", "Thông báo",
					JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
				list.remove(index);
				filltoTable();
				JOptionPane.showMessageDialog(this, "Xóa thành công!");
			}
			if (list.isEmpty()) {
				JOptionPane.showMessageDialog(this, "Không có gì để xóa!");
				getNew();
			} else {
				index = 0;
				showDetail(index);
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
		}
	}

	/**
	 * Chức năng tìm kiếm nhân viên theo Mã NV.
	 */
	private void getFind() {
		try {
			String masv = JOptionPane.showInputDialog("Nhập Mã NV cần tìm: ");
			boolean isOk = false;
			for (Employee x : list) {
				if (x.getMaNV().equalsIgnoreCase(masv)) {
					index = list.indexOf(x);
					showDetail(index);
					isOk = true;
					break;
				}
			}
			if (!isOk) {
				JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên có Mã: " + masv);
			} else {
				JOptionPane.showMessageDialog(this, "Tìm thấy có nhân viên với Mã: " + masv);
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
		}
	}

	/**
	 * Chức năng mở file dữ liệu đã lưu.
	 */
	private void getOpen() {
		try {
			FileInputStream fis = new FileInputStream("data.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);

			list = (ArrayList<Employee>) ois.readObject();
			if (list.size() > 0) {
				filltoTable();
				index = 0;
				showDetail(index);
			} else {
				getNew();
			}
			ois.close();
			fis.close();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
		}
	}

	/**
	 * Chức năng thoát và lưu dữ liệu khi thoát.
	 */
	private void getExit() {
		try {
			if (JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu lại thông tin không?", "Thông báo",
					JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
				FileOutputStream fos = new FileOutputStream("data.txt");
				ObjectOutputStream oos = new ObjectOutputStream(fos);
				oos.writeObject(list);

				oos.flush();
				fos.flush();
				oos.close();
				fos.close();
				JOptionPane.showMessageDialog(this, "Lưu thành công!");
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
		}
	}

	/**
	 * Chức năng di chuyển lên đầu tiên.
	 */
	private void getFirst() {
		index = 0;
		showDetail(index);
	}

	/**
	 * Chức năng di chuyển lên 1 bậc.
	 */
	private void getPrev() {
		if (index > 0) {
			index--;
			showDetail(index);
		}
	}

	/**
	 * Chức năng di chuyển xuống 1 bậc.
	 */
	private void getNext() {
		if (index < list.size() - 1) {
			index++;
			showDetail(index);
		}
	}

	/**
	 * Chức năng di chuyển xuống cuối cùng.
	 */
	private void getLast() {
		index = list.size() - 1;
		showDetail(index);
	}

	/**
	 * Kiểm thử dữ liệu nhân viên nhập vào.
	 *
	 * @return
	 */
	private boolean getValidate() {
		if (txtMaNV.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Mã NV không được để rỗng!");
			txtMaNV.requestFocus();
			return false;
		}
		if (txtHoTen.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Họ tên không được để rỗng!");
			txtHoTen.requestFocus();
			return false;
		}

		try {
			if (txtTuoi.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Tuổi chưa được nhập!");
				txtTuoi.requestFocus();
				return false;
			}
			int age = Integer.parseInt(txtTuoi.getText());
			if (age < 18 || age > 55) {
				JOptionPane.showMessageDialog(this, "Tuổi không hợp lệ (nằm ngoài khoảng 15 - 55)!");
				return false;
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Giá trị tuổi không hợp lệ (Phải là giá trị số!)");
			return false;
		}

		try {
			if (txtEmail.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Email chưa được nhập!");
				txtEmail.requestFocus();
				return false;
			}
			Pattern pattern = Pattern.compile("\\w+@\\w+\\.\\w+");
			Matcher matcher = pattern.matcher(txtEmail.getText());
			if (!matcher.find()) {
				JOptionPane.showMessageDialog(this, "Định dạng email không hợp lệ!");
				return false;
			}
		} catch (HeadlessException e) {
		}

		try {
			if (txtLuong.getText().equals("")) {
				JOptionPane.showMessageDialog(this, "Lương chưa được nhập!");
				txtLuong.requestFocus();
				return false;
			}
			double salary = Double.parseDouble(txtLuong.getText());
			if (salary < 5000000) {
				JOptionPane.showMessageDialog(this, "Lương không hợp lệ (Phải > 5,000,000)!");
				return false;
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Giá trị lương không hợp lệ (Phải là giá trị số)!");
			return false;
		}
		return true;
	}
}
